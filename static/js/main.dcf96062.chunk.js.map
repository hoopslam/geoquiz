{"version":3,"sources":["styles/Questions.style.ts","API/API.ts","utils/utils.ts","store/store.tsx","components/Questions.tsx","components/Time.tsx","components/Score.tsx","styles/Summary.style.ts","components/Summary.tsx","styles/Footer.style.ts","components/Footer.tsx","components/DifficultySelector.tsx","styles/GlobalStyles.ts","styles/App.style.ts","App.tsx","index.tsx"],"names":["Card","styled","div","fetchQuizQuestions","difficulty","a","endpoint","fetch","response","json","data","results","map","question","answers","array","incorrect_answers","correct_answer","sort","Math","random","console","log","appStore","observable","object","loading","questions","questionNumber","userAnswers","time","timerId","score","gameOver","startQuiz","fetchedData","resetScore","addTime","checkAnswer","e","userAnswer","currentTarget","value","isCorrect","answerObject","correctAnswer","selectDifficulty","target","useAppStore","useObserver","toJS","Questions","undefined","className","dangerouslySetInnerHTML","__html","answer","disabled","onClick","Time","useState","setTime","useEffect","id","window","setInterval","prev","clearInterval","Score","SummaryWrapper","Summary","i","FooterWrapper","footer","Footer","href","DifficultySelector","htmlFor","name","onChange","GlobalStyles","createGlobalStyle","AppStyles","App","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcf96062.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 560px;\r\n  padding: 10px;\r\n  background-color: rgba(5, 5, 5, 0.8);\r\n  border-radius: 12px;\r\n  height: 450px;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n\r\n  > * {\r\n    margin: 10px;\r\n  }\r\n\r\n  button {\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    border: none;\r\n    width: 100%;\r\n    background-color: rgba(80, 80, 256);\r\n    color: white;\r\n\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import { shuffleArray } from \"../utils/utils\";\r\n\r\nexport interface FetchedData {\r\n  category: string;\r\n  correct_answer: string;\r\n  difficulty: string;\r\n  incorrect_answers: string[];\r\n  question: string;\r\n  type: string;\r\n}\r\n\r\nexport interface QuestionTypes extends FetchedData {  //shuffled data\r\n  answers: string[];\r\n}\r\n\r\nexport const fetchQuizQuestions = async (difficulty: string):Promise<QuestionTypes[]> => {\r\n  try {\r\nconst endpoint = `https://opentdb.com/api.php?amount=10&category=22&difficulty=${difficulty}&type=multiple`;\r\n  const response = await fetch(endpoint);\r\n  const data = await response.json();\r\n\r\n  // shuffle questions and answer into new array and return new data\r\n  return data.results.map((question: FetchedData) => ({\r\n    ...question,\r\n    answers: shuffleArray([\r\n      ...question.incorrect_answers,\r\n      question.correct_answer,\r\n    ]),\r\n  }));\r\n  } catch (err) {\r\n    console.log(err)\r\n    return [];\r\n  }\r\n  \r\n};\r\n","export const shuffleArray = (array: any[]) =>\r\n  [...array].sort(() => Math.random() - 0.5);\r\n","import { observable, toJS } from \"mobx\";\r\nimport { useObserver } from \"mobx-react\";\r\nimport { fetchQuizQuestions } from \"../API/API\";\r\nimport { AnswerObject, QuestionTypes } from \"../types/types\";\r\nimport React from \"react\";\r\n\r\nexport interface AppStore {\r\n  loading: boolean;\r\n  questions: QuestionTypes[];\r\n  questionNumber: number;\r\n  userAnswers: AnswerObject[];\r\n  time: number;\r\n  difficulty: string;\r\n  score: number;\r\n  gameOver: boolean;\r\n\r\n  startQuiz: () => void;\r\n  addTime: (time: number) => void;\r\n  resetScore: () => void;\r\n  checkAnswer: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  selectDifficulty: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n}\r\n\r\nconst appStore: AppStore = observable.object({\r\n  loading: false,\r\n  questions: [],\r\n  questionNumber: 0,\r\n  userAnswers: [],\r\n  time: 0,\r\n  timerId: 0,\r\n  difficulty: \"easy\",\r\n  score: 0,\r\n  gameOver: true,\r\n\r\n  async startQuiz() {\r\n    appStore.loading = true;\r\n    appStore.gameOver = false;\r\n    const fetchedData = await fetchQuizQuestions(appStore.difficulty);\r\n    appStore.questions = [...fetchedData];\r\n    appStore.resetScore();\r\n  },\r\n  resetScore() {\r\n    appStore.score = 0;\r\n    appStore.time = 0;\r\n    appStore.userAnswers = [];\r\n    appStore.questionNumber = 0;\r\n    appStore.loading = false;\r\n  },\r\n  addTime(time) {\r\n    appStore.time = time;\r\n  },\r\n  checkAnswer(e) {\r\n    if (!appStore.gameOver) {\r\n      const userAnswer = e.currentTarget.value;\r\n      const isCorrect =\r\n        appStore.questions[appStore.questionNumber].correct_answer ===\r\n        userAnswer;\r\n      isCorrect && appStore.score++;\r\n\r\n      const answerObject = {\r\n        question: appStore.questions[appStore.questionNumber].question,\r\n        userAnswer,\r\n        isCorrect,\r\n        correctAnswer:\r\n          appStore.questions[appStore.questionNumber].correct_answer,\r\n      };\r\n      appStore.userAnswers = [...appStore.userAnswers, answerObject];\r\n      if (appStore.questionNumber === 9) {\r\n        appStore.gameOver = true;\r\n      } else {\r\n        appStore.questionNumber++;\r\n      }\r\n    }\r\n  },\r\n  selectDifficulty(e) {\r\n    appStore.difficulty = e.target.value;\r\n  },\r\n} as AppStore);\r\n\r\nconst useAppStore = () => useObserver(() => toJS(appStore));\r\n\r\nexport { appStore, useAppStore };\r\n","import { Card } from \"../styles/Questions.style\";\r\nimport { useAppStore } from \"../store/store\";\r\n\r\nconst Questions: React.FC = () => {\r\n  const { questionNumber, questions, userAnswers, checkAnswer} = useAppStore();\r\n  const question = questions[questionNumber].question;\r\n  const answers= questions[questionNumber].answers;\r\n  const userAnswer = userAnswers ? userAnswers[questionNumber] : undefined;\r\n\r\n  return (\r\n    <Card>\r\n      <p className=\"number\">Question: {questionNumber + 1} / 10</p>\r\n      <p dangerouslySetInnerHTML={{__html: question}}/>\r\n      {answers.map((answer) => (\r\n        <button\r\n          key={answer}\r\n          disabled={userAnswer ? true : false}\r\n          value={answer}\r\n          onClick={checkAnswer}\r\n        >\r\n          <span dangerouslySetInnerHTML={{__html: answer}} />\r\n        </button>\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import { useAppStore } from \"../store/store\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Time = () => {\r\n  const { addTime } = useAppStore();\r\n  const [time, setTime] = useState<number>(0);\r\n\r\n  useEffect(() => {  \r\n    const addSecond = (): void => {\r\n      setTime((prev) => prev + 1);\r\n    };\r\n\r\n    //setInterval Id to stop interval\r\n    let id = window.setInterval(() => {\r\n      addSecond();\r\n    }, 1000);\r\n\r\n    //Cleanup function to stop interval on unmount\r\n    return () => {\r\n      clearInterval(id);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    addTime(time)\r\n  }, [time])\r\n  return <p>Time: {time}s</p>;\r\n};\r\n\r\nexport default Time;\r\n","import { useAppStore } from \"../store/store\"\r\n\r\nconst Score = () => {\r\n    const { score } = useAppStore();\r\n    return (\r\n        <p>Score: {score}</p>\r\n    )\r\n}\r\n\r\nexport default Score\r\n","import styled from \"styled-components\";\r\n\r\nexport const SummaryWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    .question {\r\n        border-radius: 10px;\r\n        margin: 10px 0;\r\n        padding: 10px;\r\n\r\n        p {\r\n            margin: 5px;\r\n        }\r\n    }\r\n\r\n    .answers {\r\n        display: flex;\r\n        justify-content: space-between;\r\n\r\n    }\r\n\r\n    .correct {\r\n        background-color: rgba(0,180,0,.7);\r\n    }\r\n    .incorrect {\r\n        background-color: rgba(180, 0,0,.7);\r\n    }\r\n    .header{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin: 10px 0;\r\n\r\n        @media screen and (max-width: 767px) {\r\n            display: block;\r\n            font-size: .8rem;\r\n        }\r\n    }\r\n`","import { useAppStore } from \"../store/store\";\r\nimport { SummaryWrapper } from \"../styles/Summary.style\";\r\n\r\nconst Summary = () => {\r\n  const { userAnswers, score, time } = useAppStore();\r\n  return (\r\n    <SummaryWrapper>\r\n      <div className=\"header\">\r\n        <h2>Your Score: { score} / 10</h2>\r\n        <h2>Your time: {time} seconds</h2>\r\n      </div>\r\n\r\n      {userAnswers.map((question, i) => (\r\n        <div\r\n          className={`question ${question.isCorrect ? \"correct\" : \"incorrect\"}`}\r\n          key={i}\r\n        >\r\n          <p>Question {i + 1}</p>\r\n          <p dangerouslySetInnerHTML={{ __html: question.question }} />\r\n          <p>\r\n            Your Answer:{\" \"}\r\n            <span dangerouslySetInnerHTML={{ __html: question.userAnswer }} />\r\n          </p>\r\n          <p>\r\n            Correct Answer:{\" \"}\r\n            <span\r\n              dangerouslySetInnerHTML={{ __html: question.correctAnswer }}\r\n            />\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </SummaryWrapper>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FooterWrapper = styled.footer`\r\n  .attribution {\r\n    p {\r\n      font-size: 0.9rem;\r\n      margin: 10px;\r\n    }\r\n    a:visited,\r\n    a:link {\r\n      color: grey;\r\n    }\r\n  }\r\n`;\r\n","import { FooterWrapper } from \"../styles/Footer.style\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterWrapper>\r\n      <div className=\"attribution\">\r\n        <p>\r\n          Made by <a href=\"https://devcho.com\">David Cho</a> &copy;2021\r\n        </p>\r\n        <p>\r\n          Background photo by{\" \"}\r\n          <a href=\"https://unsplash.com/@nsx_2000\">Krzysztof Hepner</a>\r\n        </p>\r\n      </div>\r\n    </FooterWrapper>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useAppStore } from \"../store/store\";\r\n\r\nconst DifficultySelector = () => {\r\n  const { selectDifficulty } = useAppStore();\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"difficulty\">Choose difficulty: </label>\r\n      <select name=\"difficulty\" id=\"difficulty\" onChange={selectDifficulty}>\r\n        <option value=\"easy\">Easy</option>\r\n        <option value=\"medium\">Medium</option>\r\n        <option value=\"hard\">Hard</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DifficultySelector;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: \"Poppins\", sans-serif;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    body {\r\n        background-image: url(\"https://images.unsplash.com/photo-1576185850227-1f72b7f8d483?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2020&q=80\");\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        width: 100%;\r\n        min-height: 100vh;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: white;\r\n    }\r\n\r\n    p, label, select, button {\r\n        font-size: 1.2rem;\r\n\r\n        @media screen and (max-width: 767px){\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n\r\n    h1 {\r\n        font-size: 3rem;\r\n        @media screen and (max-width: 767px){\r\n            font-size: 2rem;\r\n        }\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AppStyles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-width: 767px;\r\n  padding: 30px;\r\n  background-color: rgba(5, 5, 5, 0.7);\r\n  min-height: 100vh;\r\n\r\n  @media screen and (max-width: 767px) {\r\n      min-width: 0;\r\n  }\r\n\r\n  .start-options {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: 100%;\r\n      margin: 10px;\r\n      padding: 10px;\r\n\r\n      > * {\r\n          margin: 20px;\r\n      }\r\n\r\n      select {\r\n          outline: none;\r\n      }\r\n  }\r\n\r\n  .start-button {\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    border: none;\r\n    background-color: rgba(80,80,256);\r\n    color: white;\r\n  }\r\n\r\n  .score {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 10px;\r\n      \r\n      p {\r\n        font-size: 1.5rem;  \r\n      }\r\n      \r\n  }\r\n`;\r\n","//components\nimport Questions from \"./components/Questions\";\nimport Time from \"./components/Time\";\nimport Score from \"./components/Score\";\nimport Summary from \"./components/Summary\";\nimport Footer from \"./components/Footer\";\nimport DifficultySelector from \"./components/DifficultySelector\";\n\n//store\nimport { useAppStore } from \"./store/store\";\n\n//styles\nimport { GlobalStyles } from \"./styles/GlobalStyles\";\nimport { AppStyles } from \"./styles/App.style\";\n\nfunction App() {\n  const { gameOver, loading, questionNumber, userAnswers, startQuiz } =\n    useAppStore();\n\n  return (\n    <>\n      <GlobalStyles />\n      <AppStyles>\n        <h1>Geo Quiz</h1>\n        {gameOver && (\n          <div className=\"start-options\">\n            <DifficultySelector />\n            <button className=\"start-button\" onClick={startQuiz}>\n              Start New Quiz\n            </button>\n          </div>\n        )}\n        {loading && <p>Loading Quiz...</p>}\n        {!loading && !gameOver && questionNumber < 10 && (\n          <div className=\"card-container\">\n            <div className=\"score\">\n              <Time />\n              <Score />\n            </div>\n            <Questions />\n          </div>\n        )}\n        {gameOver && userAnswers.length > 0 && <Summary />}\n        <Footer />\n      </AppStyles>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}